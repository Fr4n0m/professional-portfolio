---
const { lang } = Astro.props;

const languages = ['es', 'en'] as const;

type Language = (typeof languages)[number];

function updateLanguageUrl(
	currentLang: Language,
	targetLang: Language,
): string {
	if (currentLang === 'es' && targetLang === 'en') {
		return '/en';
	}
	if (currentLang === 'en' && targetLang === 'es') {
		return '/';
	}
	return currentLang === 'es' ? '/' : '/en';
}
---

<section class='dark:bg-gray-800'>
	<nav>
		<ul>
			{
				languages.map(l => {
					const url = updateLanguageUrl(lang as Language, l);
					return (
						<li>
							<a
								class='dark:border-gray-700 dark:hover:bg-gray-900 dark:hover:border-gray-500'
								href={url}
								class={l === lang ? 'active' : ''}
							>
								{l.toUpperCase()}
							</a>
						</li>
					);
				})
			}
		</ul>
	</nav>
</section>

<style>
	section {
		position: fixed;
		top: 10px;
		right: 10px;
		font-size: 0.8rem;
		padding: 0.5em;
		background-color: #f1f1f1;
		border-radius: 5px;
		z-index: 1000;
	}

	ul {
		display: flex;
		gap: 0.5em;
	}

	a {
		color: #777;
		display: inline-flex;
		align-items: center;
		justify-content: center;
		border: 1px solid #eee;
		padding: 4px;
		height: 32px;
		width: 32px;
		border-radius: 6px;
		transition: all 0.3s ease;
	}

	a:hover {
		background: #ddd;
		border: 1px solid #ddd;
		cursor: pointer;
	}

	a:active {
		transform: scale(0.9);
	}
</style>
