---
const { lang } = Astro.props || {};

// Sistema de idiomas con bandera
const languages = [
	{ id: 'es', name: 'EspaÃ±ol', flag: 'ðŸ‡ªðŸ‡¸' },
	{ id: 'en', name: 'English', flag: 'ðŸ‡¬ðŸ‡§' },
] as const;

type Language = typeof languages[number]['id'];

function updateLanguageUrl(
	currentLang: Language,
	targetLang: Language,
): string {
	if (currentLang === 'es' && targetLang === 'en') {
		return '/en';
	}
	if (currentLang === 'en' && targetLang === 'es') {
		return '/';
	}
	return currentLang === 'es' ? '/' : '/en';
}

const currentLang = (lang || 'es') as Language;
---

<div class='relative ml-1 mr-1'>
	<button
		id='language-toggle-btn'
		class='appearance-none border-none flex hover:scale-110 transition-transform duration-200 p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800'
		aria-label='Cambiar idioma'
	>
		<span class='sr-only'>Elige el idioma</span>
		<svg class='language-toggle-icon size-5 transition-all text-gray-600 dark:text-gray-400' xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'>
			<path d='m5 8 6 6'></path>
			<path d='m4 14 6-6 2-3'></path>
			<path d='M2 5h12'></path>
			<path d='M7 2h1'></path>
			<path d='m22 22-5-10-5 10'></path>
			<path d='m14 18 6 0'></path>
		</svg>
	</button>
	<div
		id='language-menu'
		class='absolute hidden scale-95 top-10 right-0 text-sm p-2 min-w-[10rem] rounded-lg border border-gray-200 bg-white/95 dark:bg-gray-900/95 dark:border-gray-700/50 shadow-lg backdrop-blur-xl'
	>
		<ul>
			{
				languages.map(language => {
					const url = updateLanguageUrl(currentLang, language.id);
					const isActive = language.id === currentLang;
					return (
						<li class='language-menu-option px-3 py-2 cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-800 rounded-md transition-colors duration-150' data-lang={language.id} data-active={isActive}>
							<a
								href={url}
								class='flex items-center gap-3'
							>
								<span class='text-xl'>{language.flag}</span>
								<span class='font-medium text-gray-700 dark:text-gray-200'>{language.name}</span>
							</a>
						</li>
					);
				})
			}
		</ul>
	</div>
</div>

<script>
	const languageMenu = document.getElementById('language-menu');
	const languageToggleBtn = document.getElementById('language-toggle-btn');
	
	// Close menu when clicking outside
	document.addEventListener('click', () => {
		languageMenu?.classList.remove('open');
	});
	
	// Toggle menu when clicking button
	languageToggleBtn?.addEventListener('click', (e) => {
		e.stopPropagation();
		const isClosed = !languageMenu?.classList.contains('open');
		languageMenu?.classList[isClosed ? 'add' : 'remove']('open');
	});
	
	// Prevent menu close when clicking inside
	languageMenu?.addEventListener('click', (e) => {
		e.stopPropagation();
	});
</script>

<style>
	#language-menu.open {
		display: block !important;
		animation: scale-up-center 0.2s cubic-bezier(0.34, 1.56, 0.64, 1) both;
	}

	@keyframes scale-up-center {
		from {
			transform: scale(0.95) translateY(-5px);
			opacity: 0;
		}
		to {
			transform: scale(1) translateY(0);
			opacity: 1;
		}
	}
	
	#language-toggle-btn {
		position: relative;
	}
	
	#language-toggle-btn:active {
		transform: scale(0.95);
	}
	
	/* Hacer el menÃº mÃ¡s estilo Apple */
	#language-menu {
		border-radius: 12px;
		box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08), 
					0 4px 10px rgba(0, 0, 0, 0.05);
	}
	
	.language-menu-option {
		transition: all 150ms ease;
	}
	
	.language-menu-option:hover {
		transform: translateX(2px);
	}
	
	.language-menu-option a {
		text-decoration: none;
		color: inherit;
	}
	
	/* Indicador activo */
	.language-menu-option[data-active="true"] {
		background-color: rgba(59, 130, 246, 0.1);
	}
	
	.language-menu-option[data-active="true"] span:last-child {
		color: rgb(59, 130, 246);
	}
</style>
