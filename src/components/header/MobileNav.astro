---
import ThemeToggle from '@components/ThemeToggle.astro';
import LanguageToggle from '@components/LanguageToggle.astro';
import ControlCenter from './mobile/ControlCenter.astro';
import type { HeaderItem } from '../../types/headerItem';
import type { Translations } from '../../types/translations';

export interface Props {
  headerItems: HeaderItem[];
  lang: string;
  translations: Translations;
}

const { headerItems, lang, translations } = Astro.props;
---

<!-- Header Mobile - Nuevo dise침o con Control Center -->
<div class='md:hidden'>
  <!-- Header m칩vil fijo con blur -->
  <header class='fixed top-0 left-0 right-0 bg-white/80 dark:bg-gray-900/80 backdrop-blur-lg z-50 border-b border-gray-200/20 dark:border-gray-700/20'>
    <div class='flex items-center justify-between px-4 py-3'>
      <!-- Logo y bot칩n de men칰 -->
      <div class='flex items-center gap-3'>
        <button
          id='mobile-menu-button'
          class='p-2 -ml-2 rounded-xl hover:bg-gray-100 dark:hover:bg-gray-800 transition-all duration-200 ease-out active:scale-95'
          aria-label='Toggle menu'
          type='button'
        >
          <svg id='menu-icon' class='w-6 h-6 text-gray-700 dark:text-gray-300 transition-all duration-300' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
            <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6h16M4 12h16M4 18h16'></path>
          </svg>
          <svg id='close-icon' class='w-6 h-6 text-gray-700 dark:text-gray-300 hidden transition-all duration-300' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
            <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 18L18 6M6 6l12 12'></path>
          </svg>
        </button>
        
        <a href={lang === 'es' ? '/' : `/${lang}/`} class='flex items-center group'>
          <img
            src='/assets/images/Fr4n0m Photo.webp'
            alt='Fr4n0m photo'
            class='w-9 h-9 rounded-full object-cover ring-2 ring-transparent group-hover:ring-gray-300 dark:group-hover:ring-gray-600 transition-all duration-300'
          />
          <span class='ml-2 font-semibold text-gray-900 dark:text-white'>Portfolio</span>
        </a>
      </div>

      <!-- Redise침o de los botones de tema e idioma -->
      <div class="flex items-center gap-2">
        <button id="theme-toggle-mobile" class="theme-toggle-button relative w-10 h-10 flex items-center justify-center rounded-full bg-gray-100 dark:bg-gray-800 transition-colors">
          <span class="light-icon absolute transition-opacity duration-300" style="opacity: 1">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-yellow-500">
              <circle cx="12" cy="12" r="5"></circle>
              <line x1="12" y1="1" x2="12" y2="3"></line>
              <line x1="12" y1="21" x2="12" y2="23"></line>
              <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
              <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
              <line x1="1" y1="12" x2="3" y2="12"></line>
              <line x1="21" y1="12" x2="23" y2="12"></line>
              <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
              <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
            </svg>
          </span>
          <span class="dark-icon absolute transition-opacity duration-300" style="opacity: 0">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-blue-400">
              <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
            </svg>
          </span>
        </button>
        
        <button id="lang-toggle-mobile" class="lang-toggle-button relative w-10 h-10 flex items-center justify-center rounded-full bg-gray-100 dark:bg-gray-800 transition-colors">
          <span class="text-xl">{translations.languageFlag || '游깷'}</span>
        </button>
      </div>
    </div>
  </header>

  <!-- Men칰 de idiomas (oculto inicialmente) -->
  <div id="language-dropdown" class="fixed top-16 right-4 w-48 bg-white dark:bg-gray-900 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700 z-50 opacity-0 scale-95 pointer-events-none transition-all duration-200 transform origin-top-right">
    <div class="p-2">
      {Object.entries(translations.languages || {}).map(([code, name]) => (
        <a 
          href={code === 'es' ? '/' : `/${code}/`} 
          class={`flex items-center gap-2 p-2 rounded-lg transition-colors hover:bg-gray-100 dark:hover:bg-gray-800 ${code === lang ? 'bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400' : 'text-gray-700 dark:text-gray-300'}`}
        >
          <span class="text-lg">{translations.languageFlags?.[code] || '游깷'}</span>
          <span>{name}</span>
        </a>
      ))}
    </div>
  </div>

  <!-- Men칰 de temas (oculto inicialmente) -->
  <div id="theme-dropdown" class="fixed top-16 right-4 w-48 bg-white dark:bg-gray-900 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700 z-50 opacity-0 scale-95 pointer-events-none transition-all duration-200 transform origin-top-right">
    <div class="p-2">
      <button 
        class="theme-option flex items-center gap-2 p-2 rounded-lg transition-colors hover:bg-gray-100 dark:hover:bg-gray-800 w-full text-left"
        data-theme="light"
      >
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-yellow-500">
          <circle cx="12" cy="12" r="5"></circle>
          <line x1="12" y1="1" x2="12" y2="3"></line>
          <line x1="12" y1="21" x2="12" y2="23"></line>
          <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
          <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
          <line x1="1" y1="12" x2="3" y2="12"></line>
          <line x1="21" y1="12" x2="23" y2="12"></line>
          <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
          <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
        </svg>
        <span class="text-gray-700 dark:text-gray-300">Claro</span>
      </button>
      <button 
        class="theme-option flex items-center gap-2 p-2 rounded-lg transition-colors hover:bg-gray-100 dark:hover:bg-gray-800 w-full text-left"
        data-theme="dark"
      >
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-blue-400">
          <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
        </svg>
        <span class="text-gray-700 dark:text-gray-300">Oscuro</span>
      </button>
      <button 
        class="theme-option flex items-center gap-2 p-2 rounded-lg transition-colors hover:bg-gray-100 dark:hover:bg-gray-800 w-full text-left"
        data-theme="system"
      >
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-gray-500">
          <rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect>
          <line x1="8" y1="21" x2="16" y2="21"></line>
          <line x1="12" y1="17" x2="12" y2="21"></line>
        </svg>
        <span class="text-gray-700 dark:text-gray-300">Sistema</span>
      </button>
    </div>
  </div>

  <!-- Mobile Menu - Estilo moderno -->
  <div
    id='mobile-menu'
    class='fixed inset-x-0 top-[69px] bg-white dark:bg-gray-900 shadow-2xl overflow-hidden z-40 transition-all duration-500 ease-out transform -translate-y-full opacity-0'
    data-open='false'
  >
    <nav class='px-4 py-6 max-h-[calc(100vh-69px)] overflow-y-auto'>
      {headerItems.map((item, index) => (
        <a
          class='mobile-nav-link flex items-center gap-3 px-4 py-3 mb-2 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800 rounded-xl transition-all duration-200 transform hover:translate-x-1'
          data-section={item.label}
          href={item.url}
          target={item.title === 'CV' ? '_blank' : '_self'}
          style={`animation-delay: ${index * 50}ms`}
        >
          <span class='text-lg font-medium'>{item.title}</span>
          {item.title === 'CV' && (
            <svg class='w-4 h-4 ml-auto opacity-50 text-gray-700 dark:text-gray-300' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
              <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14'></path>
            </svg>
          )}
        </a>
      ))}
      
      <!-- Link de configuraci칩n avanzada -->
      <a
        class='mobile-nav-link flex items-center gap-3 px-4 py-3 mb-2 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800 rounded-xl transition-all duration-200 transform hover:translate-x-1 mt-4 border-t border-gray-200 dark:border-gray-700 pt-4'
        href="/settings"
      >
        <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
        </svg>
        <span class='text-lg font-medium'>{translations.settings?.title || 'Configuraci칩n avanzada'}</span>
      </a>
    </nav>
  </div>
</div>

<!-- Spacer para que el contenido no quede bajo el header -->
<div class='md:hidden h-[69px]'></div>

<script>
  import { gsap } from 'gsap';
  
  // Mobile menu functionality
  function initMobileMenu() {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const menuIcon = document.getElementById('menu-icon');
    const closeIcon = document.getElementById('close-icon');
    const body = document.body;
    
    if (!mobileMenuButton || !mobileMenu || !menuIcon || !closeIcon) return;
    
    const toggleMenu = (open) => {
      const isOpen = open !== undefined ? open : mobileMenu.dataset.open !== 'true';
      
      mobileMenu.dataset.open = isOpen.toString();
      
      if (isOpen) {
        // Abrir men칰
        mobileMenu.classList.remove('-translate-y-full', 'opacity-0');
        mobileMenu.classList.add('translate-y-0', 'opacity-100');
        menuIcon.classList.add('rotate-90', 'opacity-0', 'pointer-events-none');
        closeIcon.classList.remove('hidden', '-rotate-90');
        closeIcon.classList.add('rotate-0');
        body.style.overflow = 'hidden';
        
        // Animar items del men칰
        const items = mobileMenu.querySelectorAll('.mobile-nav-link');
        items.forEach((item, index) => {
          setTimeout(() => {
            item.classList.add('animate-slide-in');
          }, index * 50);
        });
      } else {
        // Cerrar men칰
        mobileMenu.classList.add('-translate-y-full', 'opacity-0');
        mobileMenu.classList.remove('translate-y-0', 'opacity-100');
        menuIcon.classList.remove('rotate-90', 'opacity-0', 'pointer-events-none');
        closeIcon.classList.add('-rotate-90');
        setTimeout(() => {
          closeIcon.classList.add('hidden');
          closeIcon.classList.remove('rotate-0');
        }, 300);
        body.style.overflow = '';
        
        // Reset animaciones
        const items = mobileMenu.querySelectorAll('.mobile-nav-link');
        items.forEach(item => {
          item.classList.remove('animate-slide-in');
        });
      }
    };
    
    mobileMenuButton.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      toggleMenu();
    });
    
    // Cerrar men칰 al hacer clic fuera
    document.addEventListener('click', (event) => {
      const target = event.target;
      if (!mobileMenuButton.contains(target) && 
          !mobileMenu.contains(target) && 
          mobileMenu.dataset.open === 'true') {
        toggleMenu(false);
      }
    });
    
    // Manejar links del men칰
    const menuLinks = mobileMenu.querySelectorAll('a');
    menuLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        const href = link.getAttribute('href');
        
        if (href && href.includes('#')) {
          e.preventDefault();
          
          const hashIndex = href.indexOf('#');
          const targetId = href.substring(hashIndex + 1);
          const targetSection = document.getElementById(targetId);
          
          if (targetSection) {
            const headerHeight = 69;
            const targetPosition = targetSection.offsetTop - headerHeight - 20;
            
            window.scrollTo({
              top: targetPosition,
              behavior: 'smooth'
            });
          }
        }
        
        toggleMenu(false);
      });
    });
    
    // Cerrar men칰 con Escape
    document.addEventListener('keydown', (event) => {
      if (event.key === 'Escape' && mobileMenu.dataset.open === 'true') {
        toggleMenu(false);
      }
    });
    
    // Manejar resize
    window.addEventListener('resize', () => {
      if (window.innerWidth >= 768 && mobileMenu.dataset.open === 'true') {
        toggleMenu(false);
      }
    });
  }

  // Mobile navigation highlighting
  function setupMobileNavHighlighting() {
    const sections = document.querySelectorAll('section[data-section]');
    const navLinks = document.querySelectorAll('.mobile-nav-link');
    
    if (!sections.length || !navLinks.length) return;
    
    const updateActiveLink = () => {
      const scrollPosition = window.scrollY;
      const windowHeight = window.innerHeight;
      const documentHeight = document.documentElement.scrollHeight;
      const headerHeight = 69;
      const offset = headerHeight + 40;
      
      let activeSection = '';
      
      if (scrollPosition + windowHeight >= documentHeight - 10) {
        activeSection = sections[sections.length - 1].id;
      } else {
        sections.forEach(section => {
          const sectionElement = section;
          const sectionTop = sectionElement.offsetTop - offset;
          const sectionHeight = sectionElement.offsetHeight;
          
          if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
            activeSection = section.id;
          }
        });
        
        if (!activeSection && scrollPosition < 100) {
          activeSection = sections[0].id;
        }
      }
      
      navLinks.forEach(link => {
        const linkSection = link.getAttribute('data-section');
        
        if (linkSection === activeSection) {
          link.classList.add('bg-blue-50', 'dark:bg-blue-900/20', 'text-blue-600', 'dark:text-blue-400', 'font-semibold');
          link.classList.remove('text-gray-700', 'dark:text-gray-300');
        } else {
          link.classList.remove('bg-blue-50', 'dark:bg-blue-900/20', 'text-blue-600', 'dark:text-blue-400', 'font-semibold');
          link.classList.add('text-gray-700', 'dark:text-gray-300');
        }
      });
    };
    
    let isScrolling = false;
    let scrollTimeout;
    
    const handleScroll = () => {
      if (!isScrolling) {
        window.requestAnimationFrame(() => {
          updateActiveLink();
          isScrolling = false;
        });
        isScrolling = true;
      }
      
      clearTimeout(scrollTimeout);
      scrollTimeout = window.setTimeout(() => {
        updateActiveLink();
      }, 100);
    };
    
    window.addEventListener('scroll', handleScroll, { passive: true });
    window.addEventListener('resize', updateActiveLink);
    
    updateActiveLink();
  }

  // Theme & Language Toggles
  function setupHeaderToggles() {
    // Theme toggle
    const themeToggle = document.getElementById('theme-toggle-mobile');
    const themeDropdown = document.getElementById('theme-dropdown');
    const themeOptions = document.querySelectorAll('.theme-option');
    const lightIcon = document.querySelector('.light-icon');
    const darkIcon = document.querySelector('.dark-icon');
    
    if (themeToggle && themeDropdown && lightIcon && darkIcon) {
      // Inicializar icono correcto
      const theme = localStorage.getItem('theme') || 'system';
      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
      const isDark = theme === 'dark' || (theme === 'system' && prefersDark);
      
      if (isDark) {
        lightIcon.style.opacity = '0';
        darkIcon.style.opacity = '1';
      } else {
        lightIcon.style.opacity = '1';
        darkIcon.style.opacity = '0';
      }
      
      // Toggle dropdown
      let themeDropdownOpen = false;
      
      themeToggle.addEventListener('click', (e) => {
        e.stopPropagation();
        
        if (themeDropdownOpen) {
          gsap.to(themeDropdown, {
            opacity: 0,
            scale: 0.95,
            duration: 0.2,
            onComplete: () => {
              themeDropdown.classList.add('pointer-events-none');
            }
          });
        } else {
          themeDropdown.classList.remove('pointer-events-none');
          gsap.to(themeDropdown, {
            opacity: 1,
            scale: 1,
            duration: 0.3,
            ease: 'back.out(1.7)'
          });
          
          // Cerrar language dropdown si est치 abierto
          if (langDropdownOpen) {
            gsap.to(langDropdown, {
              opacity: 0,
              scale: 0.95,
              duration: 0.2,
              onComplete: () => {
                langDropdown.classList.add('pointer-events-none');
              }
            });
            langDropdownOpen = false;
          }
        }
        
        themeDropdownOpen = !themeDropdownOpen;
      });
      
      // Theme options
      themeOptions.forEach(option => {
        option.addEventListener('click', () => {
          const newTheme = option.dataset.theme;
          localStorage.setItem('theme', newTheme);
          
          const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
          const isDark = newTheme === 'dark' || (newTheme === 'system' && prefersDark);
          
          document.documentElement.classList.toggle('dark', isDark);
          
          if (isDark) {
            gsap.to(lightIcon, { opacity: 0, duration: 0.2 });
            gsap.to(darkIcon, { opacity: 1, duration: 0.2 });
          } else {
            gsap.to(lightIcon, { opacity: 1, duration: 0.2 });
            gsap.to(darkIcon, { opacity: 0, duration: 0.2 });
          }
          
          // Cerrar dropdown
          gsap.to(themeDropdown, {
            opacity: 0,
            scale: 0.95,
            duration: 0.2,
            onComplete: () => {
              themeDropdown.classList.add('pointer-events-none');
            }
          });
          
          themeDropdownOpen = false;
        });
      });
    }
    
    // Language toggle
    const langToggle = document.getElementById('lang-toggle-mobile');
    const langDropdown = document.getElementById('language-dropdown');
    
    if (langToggle && langDropdown) {
      let langDropdownOpen = false;
      
      langToggle.addEventListener('click', (e) => {
        e.stopPropagation();
        
        if (langDropdownOpen) {
          gsap.to(langDropdown, {
            opacity: 0,
            scale: 0.95,
            duration: 0.2,
            onComplete: () => {
              langDropdown.classList.add('pointer-events-none');
            }
          });
        } else {
          langDropdown.classList.remove('pointer-events-none');
          gsap.to(langDropdown, {
            opacity: 1,
            scale: 1,
            duration: 0.3,
            ease: 'back.out(1.7)'
          });
          
          // Cerrar theme dropdown si est치 abierto
          if (themeDropdownOpen) {
            gsap.to(themeDropdown, {
              opacity: 0,
              scale: 0.95,
              duration: 0.2,
              onComplete: () => {
                themeDropdown.classList.add('pointer-events-none');
              }
            });
            themeDropdownOpen = false;
          }
        }
        
        langDropdownOpen = !langDropdownOpen;
      });
    }
    
    // Cerrar dropdowns al hacer clic fuera
    document.addEventListener('click', (e) => {
      if (themeDropdown && !themeToggle.contains(e.target) && !themeDropdown.contains(e.target)) {
        gsap.to(themeDropdown, {
          opacity: 0,
          scale: 0.95,
          duration: 0.2,
          onComplete: () => {
            themeDropdown.classList.add('pointer-events-none');
          }
        });
        themeDropdownOpen = false;
      }
      
      if (langDropdown && !langToggle.contains(e.target) && !langDropdown.contains(e.target)) {
        gsap.to(langDropdown, {
          opacity: 0,
          scale: 0.95,
          duration: 0.2,
          onComplete: () => {
            langDropdown.classList.add('pointer-events-none');
          }
        });
        langDropdownOpen = false;
      }
    });
  }

  // Initialize
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      initMobileMenu();
      setupMobileNavHighlighting();
      setupHeaderToggles();
    });
  } else {
    initMobileMenu();
    setupMobileNavHighlighting();
    setupHeaderToggles();
  }
</script>

<style>
  /* Animaci칩n del header al hacer scroll */
  header {
    animation: header-shadow 0.5s linear;
  }
  
  @keyframes header-shadow {
    from {
      box-shadow: none;
    }
    to {
      box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);
    }
  }
  
  /* Animaciones del men칰 */
  #menu-icon,
  #close-icon {
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), 
                opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* Slide in animation para los items */
  @keyframes slide-in {
    from {
      transform: translateX(-20px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
  .animate-slide-in {
    animation: slide-in 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }
  
  /* Mejora el scroll del men칰 en m칩vil */
  #mobile-menu nav {
    scrollbar-width: thin;
    scrollbar-color: rgb(156 163 175) transparent;
  }
  
  #mobile-menu nav::-webkit-scrollbar {
    width: 6px;
  }
  
  #mobile-menu nav::-webkit-scrollbar-track {
    background: transparent;
  }
  
  #mobile-menu nav::-webkit-scrollbar-thumb {
    background-color: rgb(156 163 175);
    border-radius: 3px;
  }
  
  .dark #mobile-menu nav::-webkit-scrollbar-thumb {
    background-color: rgb(75 85 99);
  }
  
  /* Efecto blur m치s pronunciado en m칩vil */
  @supports (backdrop-filter: blur(12px)) {
    header {
      backdrop-filter: blur(12px);
    }
  }
  
  /* Nuevos estilos para botones de tema e idioma */
  .theme-toggle-button, .lang-toggle-button {
    transition: all 0.2s ease;
  }
  
  .theme-toggle-button:hover, .lang-toggle-button:hover {
    transform: scale(1.05);
    background-color: rgba(0, 0, 0, 0.05);
  }
  
  .theme-toggle-button:active, .lang-toggle-button:active {
    transform: scale(0.95);
  }
  
  /* Asegurar que los dropdowns est칠n ocultos inicialmente */
  #theme-dropdown, #language-dropdown {
    pointer-events: none;
  }
</style>
