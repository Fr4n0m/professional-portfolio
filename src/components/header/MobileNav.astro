---
import ThemeToggle from '@components/ThemeToggle.astro';
import LanguageToggle from '@components/LanguageToggle.astro';
import ControlCenter from './mobile/ControlCenter.astro';
import type { HeaderItem } from '../../types/headerItem';

export interface Props {
  headerItems: HeaderItem[];
  lang: string;
}

const { headerItems, lang } = Astro.props;
---

<!-- Header Mobile - Nuevo diseño con Control Center -->
<div class='md:hidden'>
  <!-- Header móvil fijo con blur -->
  <header class='fixed top-0 left-0 right-0 bg-white/80 dark:bg-gray-900/80 backdrop-blur-lg z-50 border-b border-gray-200/20 dark:border-gray-700/20'>
    <div class='flex items-center justify-between px-4 py-3'>
      <!-- Logo y botón de menú -->
      <div class='flex items-center gap-3'>
        <button
          id='mobile-menu-button'
          class='p-2 -ml-2 rounded-xl hover:bg-gray-100 dark:hover:bg-gray-800 transition-all duration-200 ease-out active:scale-95'
          aria-label='Toggle menu'
          type='button'
        >
          <svg id='menu-icon' class='w-6 h-6 transition-all duration-300' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
            <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6h16M4 12h16M4 18h16'></path>
          </svg>
          <svg id='close-icon' class='w-6 h-6 hidden transition-all duration-300' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
            <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 18L18 6M6 6l12 12'></path>
          </svg>
        </button>
        
        <a href={lang === 'es' ? '/' : `/${lang}/`} class='flex items-center group'>
          <img
            src='/assets/images/Fr4n0m Photo.webp'
            alt='Fr4n0m photo'
            class='w-9 h-9 rounded-full object-cover ring-2 ring-transparent group-hover:ring-gray-300 dark:group-hover:ring-gray-600 transition-all duration-300'
          />
          <span class='ml-2 font-semibold text-gray-900 dark:text-white'>Portfolio</span>
        </a>
      </div>

      <!-- Control Center a la derecha -->
      <ControlCenter />
    </div>
  </header>

  <!-- Mobile Menu - Estilo moderno -->
  <div
    id='mobile-menu'
    class='fixed inset-x-0 top-[69px] bg-white dark:bg-gray-900 shadow-2xl overflow-hidden z-40 transition-all duration-500 ease-out transform -translate-y-full opacity-0'
    data-open='false'
  >
    <nav class='px-4 py-6 max-h-[calc(100vh-69px)] overflow-y-auto'>
      {headerItems.map((item, index) => (
        <a
          class='mobile-nav-link flex items-center gap-3 px-4 py-3 mb-2 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800 rounded-xl transition-all duration-200 transform hover:translate-x-1'
          data-section={item.label}
          href={item.url}
          target={item.title === 'CV' ? '_blank' : '_self'}
          style={`animation-delay: ${index * 50}ms`}
        >
          <span class='text-lg font-medium'>{item.title}</span>
          {item.title === 'CV' && (
            <svg class='w-4 h-4 ml-auto opacity-50' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
              <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14'></path>
            </svg>
          )}
        </a>
      ))}
    </nav>
  </div>
</div>

<!-- Spacer para que el contenido no quede bajo el header -->
<div class='md:hidden h-[69px]'></div>

<script>
  // Mobile menu functionality
  function initMobileMenu() {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const menuIcon = document.getElementById('menu-icon');
    const closeIcon = document.getElementById('close-icon');
    const body = document.body;
    
    if (!mobileMenuButton || !mobileMenu || !menuIcon || !closeIcon) return;
    
    const toggleMenu = (open) => {
      const isOpen = open !== undefined ? open : mobileMenu.dataset.open !== 'true';
      
      mobileMenu.dataset.open = isOpen.toString();
      
      if (isOpen) {
        // Abrir menú
        mobileMenu.classList.remove('-translate-y-full', 'opacity-0');
        mobileMenu.classList.add('translate-y-0', 'opacity-100');
        menuIcon.classList.add('rotate-90', 'opacity-0', 'pointer-events-none');
        closeIcon.classList.remove('hidden', '-rotate-90');
        closeIcon.classList.add('rotate-0');
        body.style.overflow = 'hidden';
        
        // Animar items del menú
        const items = mobileMenu.querySelectorAll('.mobile-nav-link');
        items.forEach((item, index) => {
          setTimeout(() => {
            item.classList.add('animate-slide-in');
          }, index * 50);
        });
      } else {
        // Cerrar menú
        mobileMenu.classList.add('-translate-y-full', 'opacity-0');
        mobileMenu.classList.remove('translate-y-0', 'opacity-100');
        menuIcon.classList.remove('rotate-90', 'opacity-0', 'pointer-events-none');
        closeIcon.classList.add('-rotate-90');
        setTimeout(() => {
          closeIcon.classList.add('hidden');
          closeIcon.classList.remove('rotate-0');
        }, 300);
        body.style.overflow = '';
        
        // Reset animaciones
        const items = mobileMenu.querySelectorAll('.mobile-nav-link');
        items.forEach(item => {
          item.classList.remove('animate-slide-in');
        });
      }
    };
    
    mobileMenuButton.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      toggleMenu();
    });
    
    // Cerrar menú al hacer clic fuera
    document.addEventListener('click', (event) => {
      const target = event.target;
      if (!mobileMenuButton.contains(target) && 
          !mobileMenu.contains(target) && 
          mobileMenu.dataset.open === 'true') {
        toggleMenu(false);
      }
    });
    
    // Manejar links del menú
    const menuLinks = mobileMenu.querySelectorAll('a');
    menuLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        const href = link.getAttribute('href');
        
        if (href && href.includes('#')) {
          e.preventDefault();
          
          const hashIndex = href.indexOf('#');
          const targetId = href.substring(hashIndex + 1);
          const targetSection = document.getElementById(targetId);
          
          if (targetSection) {
            const headerHeight = 69;
            const targetPosition = targetSection.offsetTop - headerHeight - 20;
            
            window.scrollTo({
              top: targetPosition,
              behavior: 'smooth'
            });
          }
        }
        
        toggleMenu(false);
      });
    });
    
    // Cerrar menú con Escape
    document.addEventListener('keydown', (event) => {
      if (event.key === 'Escape' && mobileMenu.dataset.open === 'true') {
        toggleMenu(false);
      }
    });
    
    // Manejar resize
    window.addEventListener('resize', () => {
      if (window.innerWidth >= 768 && mobileMenu.dataset.open === 'true') {
        toggleMenu(false);
      }
    });
  }

  // Mobile navigation highlighting
  function setupMobileNavHighlighting() {
    const sections = document.querySelectorAll('section[data-section]');
    const navLinks = document.querySelectorAll('.mobile-nav-link');
    
    if (!sections.length || !navLinks.length) return;
    
    const updateActiveLink = () => {
      const scrollPosition = window.scrollY;
      const windowHeight = window.innerHeight;
      const documentHeight = document.documentElement.scrollHeight;
      const headerHeight = 69;
      const offset = headerHeight + 40;
      
      let activeSection = '';
      
      if (scrollPosition + windowHeight >= documentHeight - 10) {
        activeSection = sections[sections.length - 1].id;
      } else {
        sections.forEach(section => {
          const sectionElement = section;
          const sectionTop = sectionElement.offsetTop - offset;
          const sectionHeight = sectionElement.offsetHeight;
          
          if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
            activeSection = section.id;
          }
        });
        
        if (!activeSection && scrollPosition < 100) {
          activeSection = sections[0].id;
        }
      }
      
      navLinks.forEach(link => {
        const linkSection = link.getAttribute('data-section');
        
        if (linkSection === activeSection) {
          link.classList.add('bg-blue-50', 'dark:bg-blue-900/20', 'text-blue-600', 'dark:text-blue-400', 'font-semibold');
          link.classList.remove('text-gray-700', 'dark:text-gray-300');
        } else {
          link.classList.remove('bg-blue-50', 'dark:bg-blue-900/20', 'text-blue-600', 'dark:text-blue-400', 'font-semibold');
          link.classList.add('text-gray-700', 'dark:text-gray-300');
        }
      });
    };
    
    let isScrolling = false;
    let scrollTimeout;
    
    const handleScroll = () => {
      if (!isScrolling) {
        window.requestAnimationFrame(() => {
          updateActiveLink();
          isScrolling = false;
        });
        isScrolling = true;
      }
      
      clearTimeout(scrollTimeout);
      scrollTimeout = window.setTimeout(() => {
        updateActiveLink();
      }, 100);
    };
    
    window.addEventListener('scroll', handleScroll, { passive: true });
    window.addEventListener('resize', updateActiveLink);
    
    updateActiveLink();
  }

  // Initialize
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      initMobileMenu();
      setupMobileNavHighlighting();
    });
  } else {
    initMobileMenu();
    setupMobileNavHighlighting();
  }
</script>

<style>
  /* Animación del header al hacer scroll */
  header {
    animation: header-shadow 0.5s linear;
  }
  
  @keyframes header-shadow {
    from {
      box-shadow: none;
    }
    to {
      box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);
    }
  }
  
  /* Animaciones del menú */
  #menu-icon,
  #close-icon {
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), 
                opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* Slide in animation para los items */
  @keyframes slide-in {
    from {
      transform: translateX(-20px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
  .animate-slide-in {
    animation: slide-in 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }
  
  /* Mejora el scroll del menú en móvil */
  #mobile-menu nav {
    scrollbar-width: thin;
    scrollbar-color: rgb(156 163 175) transparent;
  }
  
  #mobile-menu nav::-webkit-scrollbar {
    width: 6px;
  }
  
  #mobile-menu nav::-webkit-scrollbar-track {
    background: transparent;
  }
  
  #mobile-menu nav::-webkit-scrollbar-thumb {
    background-color: rgb(156 163 175);
    border-radius: 3px;
  }
  
  .dark #mobile-menu nav::-webkit-scrollbar-thumb {
    background-color: rgb(75 85 99);
  }
  
  /* Efecto blur más pronunciado en móvil */
  @supports (backdrop-filter: blur(12px)) {
    header {
      backdrop-filter: blur(12px);
    }
  }
</style>
