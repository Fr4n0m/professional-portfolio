---
// Recibe las opciones de tema como prop
const { themes } = Astro.props;
---

<div
  id='themes-menu'
  class='absolute hidden scale-95 top-10 right-0 text-sm p-2 min-w-[10rem] rounded-lg border border-gray-200 bg-white/95 dark:bg-gray-900/95 dark:border-gray-700/50 shadow-lg backdrop-blur-xl'
>
  <ul class='space-y-1'>
    {
      themes.map(theme => {
        const Icon = theme.icon;
        return (
          <li class='themes-menu-option px-3 py-2 cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-800 rounded-md transition-colors duration-150' data-theme={theme.id}>
            <span class='flex items-center gap-3'>
              <Icon class={`size-4 ${theme.id === 'light' ? 'text-amber-500' : theme.id === 'dark' ? 'text-indigo-500' : 'text-gray-600 dark:text-gray-400'}`} />
              <span class='font-medium text-gray-700 dark:text-gray-200'>{theme.name}</span>
            </span>
          </li>
        );
      })
    }
  </ul>
</div>

<style>
  #themes-menu {
    transition: all 0.2s ease;
    transform-origin: top right;
    border-radius: 12px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08), 
                0 4px 10px rgba(0, 0, 0, 0.05);
  }
  
  #themes-menu.open {
    display: block !important;
    animation: scale-up-center 0.2s cubic-bezier(0.34, 1.56, 0.64, 1) both;
  }
  
  @keyframes scale-up-center {
    from {
      transform: scale(0.95) translateY(-5px);
      opacity: 0;
    }
    to {
      transform: scale(1) translateY(0);
      opacity: 1;
    }
  }
  
  .themes-menu-option {
    transition: all 150ms ease;
  }
  
  .themes-menu-option:hover {
    transform: translateX(2px);
  }
  
  /* Indicador activo */
  .themes-menu-option[data-active="true"] {
    background-color: rgba(59, 130, 246, 0.1);
  }
  
  .themes-menu-option[data-active="true"] span {
    color: rgb(59, 130, 246);
  }
</style>