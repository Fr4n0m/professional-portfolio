---
import { languages, getCurrentLanguage, getLanguageSwitchUrl } from '@i18n/config';
import { textsJson } from '@utils/const';
import type { Translations } from '../types/translations';

// Obtener el idioma actual
const currentLang = getCurrentLanguage(Astro.url);

// Obtener las traducciones del idioma actual
const translations = textsJson[currentLang] as Translations;
const languageNames = translations.languageNames || {};
---

<div class='relative ml-0'>
	<button
		id='language-toggle-btn'
		class='appearance-none border-none flex hover:scale-110 transition-transform duration-200 p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800'
		aria-label='Cambiar idioma'
		type='button'
	>
		<span class='sr-only'>Elige el idioma</span>
		<span class='text-xl'>{languages[currentLang]?.flag || 'üåê'}</span>
	</button>
	<div
		id='language-menu'
		class='absolute hidden scale-95 top-10 right-0 text-sm p-2 min-w-[12rem] w-[12rem] max-h-[400px] overflow-y-auto rounded-lg border border-gray-200 bg-white/95 dark:bg-gray-900/95 dark:border-gray-700/50 shadow-lg backdrop-blur-xl'
	>
		<ul class='grid grid-cols-1 gap-1'>
			{
				Object.entries(languages).map(([code, langInfo]) => {
					const url = getLanguageSwitchUrl(Astro.url, code);
					const isActive = code === currentLang;
					return (
					<li class='language-menu-option px-3 py-2 cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-800 rounded-md transition-colors duration-150' data-lang={code} data-active={isActive}>
					<a
					href={url}
					class='flex items-center gap-3'
					>
					<span class='text-xl'>{langInfo.flag}</span>
					 <span class='flex-1 font-medium text-gray-700 dark:text-gray-200'>{languageNames[code] || langInfo.nativeName}</span>
					{isActive && (
					<span class='text-blue-600 dark:text-blue-400'>‚úì</span>
					)}
					</a>
					</li>
					);
				})
			}
		</ul>
	</div>
</div>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const languageMenu = document.getElementById('language-menu');
		const languageToggleBtn = document.getElementById('language-toggle-btn');
		
		if (!languageMenu || !languageToggleBtn) return;
		
		let isOpen = false;
		
		// Toggle menu when clicking button
		languageToggleBtn.addEventListener('click', (e) => {
			e.preventDefault();
			e.stopPropagation();
			
			isOpen = !isOpen;
			if (isOpen) {
				languageMenu.classList.remove('hidden');
				languageMenu.classList.add('open');
			} else {
				languageMenu.classList.add('hidden');
				languageMenu.classList.remove('open');
			}
		});
		
		// Close menu when clicking outside
		document.addEventListener('click', (e) => {
			const target = e.target as HTMLElement;
			if (!languageMenu.contains(target) && !languageToggleBtn.contains(target)) {
				isOpen = false;
				languageMenu.classList.add('hidden');
				languageMenu.classList.remove('open');
			}
		});
		
		// Prevent menu from closing when clicking inside
		languageMenu.addEventListener('click', (e) => {
			e.stopPropagation();
		});
	});
</script>

<style>
	#language-menu.open {
		display: block !important;
		animation: scale-up-center 0.2s cubic-bezier(0.34, 1.56, 0.64, 1) both;
	}

	#language-menu.hidden {
		display: none !important;
	}

	@keyframes scale-up-center {
		from {
			transform: scale(0.95) translateY(-5px);
			opacity: 0;
		}
		to {
			transform: scale(1) translateY(0);
			opacity: 1;
		}
	}
	
	#language-toggle-btn {
		position: relative;
	}
	
	#language-toggle-btn:active {
		transform: scale(0.95);
	}
	
	/* Hacer el men√∫ m√°s estilo Apple */
	#language-menu {
		border-radius: 12px;
		box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08), 
					0 4px 10px rgba(0, 0, 0, 0.05);
	}
	
	.language-menu-option {
		transition: all 150ms ease;
	}
	
	.language-menu-option:hover {
		transform: translateX(2px);
	}
	
	.language-menu-option a {
		text-decoration: none;
		color: inherit;
	}
	
	/* Indicador activo */
	.language-menu-option[data-active="true"] {
		background-color: rgba(59, 130, 246, 0.1);
	}
	
	.language-menu-option[data-active="true"] span:not(:first-child) {
		color: rgb(59, 130, 246);
	}
	
	/* Estilos del scrollbar */
	#language-menu::-webkit-scrollbar {
		width: 6px;
	}
	
	#language-menu::-webkit-scrollbar-track {
		background: transparent;
	}
	
	#language-menu::-webkit-scrollbar-thumb {
		background: rgba(128, 128, 128, 0.3);
		border-radius: 3px;
	}
	
	#language-menu::-webkit-scrollbar-thumb:hover {
		background: rgba(128, 128, 128, 0.5);
	}
</style>
