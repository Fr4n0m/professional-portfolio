---
// SkillTooltip.astro - Tooltip para mostrar información detallada sobre tecnologías y habilidades
import { getCurrentLanguage } from '@i18n/config';

interface Props {
  name: string;
  description?: string;
  category?: 'frontend' | 'backend' | 'database' | 'tools' | 'language' | 'os' | 'framework' | 'library';
  position?: 'top' | 'right' | 'bottom' | 'left';
  experience?: number; // Nivel de experiencia de 1 a 5
  link?: string;
  className?: string; // Para pasar las clases de estilo basadas en el Tag
}

// Obtener el idioma actual
const currentLang = getCurrentLanguage(Astro.url) || 'es';

const { 
  name, 
  description = "",
  category = 'frontend',
  position = 'top',
  experience = 3,
  link = '#',
  className = ''
} = Astro.props;

// Generar el nivel de experiencia de 1 a 5
const experienceBars = Array(5).fill(0).map((_, i) => i < experience);

// Descripciones por defecto multilingües
const defaultDescriptions = {
  // Categoría Frontend
  'HTML': {
    es: 'Lenguaje de marcado estándar para la creación de páginas web.',
    en: 'Standard markup language for creating web pages.'
  },
  'CSS': {
    es: 'Lenguaje de hojas de estilo para diseñar páginas web.',
    en: 'Style sheet language for designing web pages.'
  },
  'Tailwind CSS': {
    es: 'Framework CSS utilitario para crear diseños personalizados rápidamente.',
    en: 'Utility-first CSS framework for rapidly building custom designs.'
  },
  'JavaScript': {
    es: 'Lenguaje de programación para crear contenido dinámico e interactivo.',
    en: 'Programming language for creating dynamic and interactive content.'
  },
  'TypeScript': {
    es: 'Superset tipado de JavaScript que añade tipos estáticos.',
    en: 'Typed superset of JavaScript that adds static types.'
  },
  'React': {
    es: 'Biblioteca JavaScript para construir interfaces de usuario.',
    en: 'JavaScript library for building user interfaces.'
  },
  'NextJS': {
    es: 'Framework React para aplicaciones web renderizadas por servidor.',
    en: 'React framework for server-rendered web applications.'
  },
  'Astro': {
    es: 'Framework para construir sitios web orientados al contenido y enfocados en rendimiento.',
    en: 'Framework for building content-focused websites with a focus on performance.'
  },
  'Vite': {
    es: 'Herramienta de desarrollo frontend rápida que permite hot module replacement.',
    en: 'Fast frontend development tool that enables hot module replacement.'
  },
  // Categoría Backend
  'NodeJS': {
    es: 'Entorno de ejecución de JavaScript en el servidor.',
    en: 'JavaScript runtime built on Chrome\'s V8 JavaScript engine for server-side applications.'
  },
  'Deno': {
    es: 'Entorno de ejecución seguro para JavaScript y TypeScript.',
    en: 'Secure runtime for JavaScript and TypeScript.'
  },
  'ExpressJS': {
    es: 'Framework web minimalista para NodeJS.',
    en: 'Minimal web framework for NodeJS.'
  },
  // Bases de datos
  'MongoDB': {
    es: 'Base de datos NoSQL orientada a documentos.',
    en: 'Document-oriented NoSQL database.'
  },
  'Supabase': {
    es: 'Alternativa de código abierto a Firebase con Postgres.',
    en: 'Open source Firebase alternative with Postgres.'
  },
  'MySQL': {
    es: 'Sistema de gestión de bases de datos relacionales de código abierto.',
    en: 'Open-source relational database management system.'
  },
  'Stripe': {
    es: 'Plataforma de procesamiento de pagos online.',
    en: 'Online payment processing platform.'
  },
  // Otros
  'Docker': {
    es: 'Plataforma para desarrollar, enviar y ejecutar aplicaciones en contenedores.',
    en: 'Platform for developing, shipping, and running applications in containers.'
  },
  'Git': {
    es: 'Sistema de control de versiones distribuido.',
    en: 'Distributed version control system.'
  },
  'GitHub': {
    es: 'Plataforma de alojamiento de código para control de versiones y colaboración.',
    en: 'Code hosting platform for version control and collaboration.'
  },
  'Npm': {
    es: 'Gestor de paquetes para JavaScript y Node.js.',
    en: 'Package manager for JavaScript and Node.js.'
  },
  'Pnpm': {
    es: 'Gestor de paquetes rápido y eficiente para JavaScript.',
    en: 'Fast and efficient package manager for JavaScript.'
  },
  'Bun': {
    es: 'Entorno de ejecución rápido para JavaScript y TypeScript.',
    en: 'Fast JavaScript and TypeScript runtime.'
  },
  'Windows': {
    es: 'Sistema operativo de Microsoft para ordenadores personales.',
    en: 'Microsoft operating system for personal computers.'
  },
  'MacOS': {
    es: 'Sistema operativo de Apple para ordenadores Mac.',
    en: 'Apple operating system for Mac computers.'
  },
  'Debian': {
    es: 'Distribución Linux estable y segura.',
    en: 'Stable and secure Linux distribution.'
  },
  'Kali': {
    es: 'Distribución Linux especializada en seguridad informática.',
    en: 'Linux distribution specialized in computer security.'
  }
};

// Si no hay descripción personalizada, usar la descripción por defecto según el nombre y el idioma
const finalDescription = description || defaultDescriptions[name]?.[currentLang] || defaultDescriptions[name]?.['en'] || `${name} - Tecnología web moderna.`;

// Obtener la categoría según el nombre si no se proporciona
const getCategoryByName = (name) => {
  const frontendTechs = ['HTML', 'CSS', 'Tailwind CSS', 'JavaScript', 'TypeScript', 'React', 'NextJS', 'Astro', 'Vite'];
  const backendTechs = ['NodeJS', 'Deno', 'ExpressJS', 'PHP', 'Python', 'Java'];
  const databaseTechs = ['MongoDB', 'Supabase', 'MySQL', 'PostgreSQL', 'SQLite', 'Redis'];
  const toolsTechs = ['Docker', 'Git', 'GitHub', 'Npm', 'Pnpm', 'Bun', 'Vite', 'Vercel'];
  const osTechs = ['Windows', 'MacOS', 'Debian', 'Kali', 'Ubuntu', 'Linux'];

  if (frontendTechs.includes(name)) return 'frontend';
  if (backendTechs.includes(name)) return 'backend';
  if (databaseTechs.includes(name)) return 'database';
  if (osTechs.includes(name)) return 'os';
  if (toolsTechs.includes(name)) return 'tools';
  return 'framework';
};

const finalCategory = category || getCategoryByName(name);

// Icono y color según la categoría
let categoryIcon;
let categoryBackground;
let categoryTitle;

switch (finalCategory) {
  case 'frontend':
    categoryIcon = 'layout';
    categoryBackground = 'bg-orange-100 dark:bg-orange-900/40 text-orange-600 dark:text-orange-400';
    categoryTitle = currentLang === 'es' ? 'Frontend' : 'Frontend';
    break;
  case 'backend':
    categoryIcon = 'server';
    categoryBackground = 'bg-green-100 dark:bg-green-900/40 text-green-600 dark:text-green-400';
    categoryTitle = currentLang === 'es' ? 'Backend' : 'Backend';
    break;
  case 'database':
    categoryIcon = 'database';
    categoryBackground = 'bg-blue-100 dark:bg-blue-900/40 text-blue-600 dark:text-blue-400';
    categoryTitle = currentLang === 'es' ? 'Base de datos' : 'Database';
    break;
  case 'tools':
    categoryIcon = 'tool';
    categoryBackground = 'bg-purple-100 dark:bg-purple-900/40 text-purple-600 dark:text-purple-400';
    categoryTitle = currentLang === 'es' ? 'Herramientas' : 'Tools';
    break;
  case 'os':
    categoryIcon = 'monitor';
    categoryBackground = 'bg-gray-100 dark:bg-gray-900/40 text-gray-600 dark:text-gray-400';
    categoryTitle = currentLang === 'es' ? 'Sistemas operativos' : 'Operating systems';
    break;
  case 'language':
    categoryIcon = 'code';
    categoryBackground = 'bg-red-100 dark:bg-red-900/40 text-red-600 dark:text-red-400';
    categoryTitle = currentLang === 'es' ? 'Lenguaje' : 'Language';
    break;
  case 'framework':
    categoryIcon = 'box';
    categoryBackground = 'bg-yellow-100 dark:bg-yellow-900/40 text-yellow-600 dark:text-yellow-400';
    categoryTitle = currentLang === 'es' ? 'Framework' : 'Framework';
    break;
  case 'library':
    categoryIcon = 'package';
    categoryBackground = 'bg-pink-100 dark:bg-pink-900/40 text-pink-600 dark:text-pink-400';
    categoryTitle = currentLang === 'es' ? 'Biblioteca' : 'Library';
    break;
  default:
    categoryIcon = 'code';
    categoryBackground = 'bg-blue-100 dark:bg-blue-900/40 text-blue-600 dark:text-blue-400';
    categoryTitle = currentLang === 'es' ? 'Tecnología' : 'Technology';
}

// Traducciones para las etiquetas del tooltip
const translations = {
  experienceLevel: {
    es: 'Nivel de experiencia:',
    en: 'Experience level:',
    pt: 'Nível de experiência:',
    fr: 'Niveau d\'expérience:',
    de: 'Erfahrungsstufe:',
    it: 'Livello di esperienza:',
    zh: '经验水平:',
    ja: '経験レベル:',
    ru: 'Уровень опыта:',
    ar: 'مستوى الخبرة:',
  },
  viewMore: {
    es: 'Ver más',
    en: 'View more',
    pt: 'Ver mais',
    fr: 'Voir plus',
    de: 'Mehr anzeigen',
    it: 'Vedi di più',
    zh: '查看更多',
    ja: 'もっと見る',
    ru: 'Подробнее',
    ar: 'عرض المزيد',
  }
};

// Obtener la traducción para el idioma actual o usar el predeterminado
const getTranslation = (key) => {
  return translations[key]?.[currentLang] || translations[key]?.['en'] || translations[key]?.['es'] || key;
};
---

<div class={`skill-tooltip absolute invisible opacity-0 z-[9999] transition-all duration-300 ease-out transform pointer-events-none ${
  position === 'top' ? 'bottom-full mb-2 -translate-x-1/2 left-1/2' : 
  position === 'right' ? 'left-full ml-2 -translate-y-1/2 top-1/2' : 
  position === 'bottom' ? 'top-full mt-2 -translate-x-1/2 left-1/2' : 
  'right-full mr-2 -translate-y-1/2 top-1/2'
}`}
  dir={currentLang === 'ar' ? 'rtl' : 'ltr'}
  data-lang={currentLang}
>
  <div class={`bg-white dark:bg-gray-800 rounded-lg shadow-2xl border border-gray-200 dark:border-gray-700 p-3 w-[230px] md:w-[270px] backdrop-filter backdrop-blur-sm shadow-[0_8px_30px_rgba(0,0,0,0.12)] relative ${className ? 'skill-custom-tooltip' : ''}`}>
    <!-- Agregar un borde sutil con el color del skill -->
    {className && (
      <div class="absolute inset-0 rounded-lg opacity-30 pointer-events-none border-2 skill-custom-border"></div>
    )}
    
    <div class="flex items-center border-b border-gray-200 dark:border-gray-700 pb-2 mb-2">
      <div class={`w-7 h-7 rounded-full ${categoryBackground} flex items-center justify-center mr-2.5`}>
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          {categoryIcon === 'layout' && (
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z"></path>
          )}
          {categoryIcon === 'server' && (
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01"></path>
          )}
          {categoryIcon === 'database' && (
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4m0 5c0 2.21-3.582 4-8 4s-8-1.79-8-4"></path>
          )}
          {categoryIcon === 'tool' && (
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
          )}
          {categoryIcon === 'monitor' && (
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
          )}
          {categoryIcon === 'code' && (
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"></path>
          )}
          {categoryIcon === 'box' && (
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
          )}
          {categoryIcon === 'package' && (
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4"></path>
          )}
        </svg>
      </div>
      <div>
        <h4 class="font-semibold text-sm text-gray-900 dark:text-white leading-tight">{name}</h4>
        <p class="text-[10px] text-gray-500 dark:text-gray-400 mt-0.5">{categoryTitle}</p>
      </div>
    </div>
    
    <p class="text-xs mb-2.5 text-gray-700 dark:text-gray-300">{finalDescription}</p>
    
    <div class="mb-2.5">
      <p class="text-[10px] font-medium text-gray-500 dark:text-gray-400 mb-1">{getTranslation('experienceLevel')}</p>
      <div class="flex space-x-1">
        {experienceBars.map((filled) => (
          <div class={`w-10 h-1.5 rounded-sm ${filled ? 'bg-gradient-to-r skill-gradient-bar' : 'bg-gray-200 dark:bg-gray-700'}`}></div>
        ))}
      </div>
    </div>
    
    <a href={link} target="_blank" rel="noopener noreferrer" class="text-[10px] font-medium text-right block hover:underline skill-tooltip-link">
      {getTranslation('viewMore')} &rarr;
    </a>
    
    <!-- Flecha del tooltip según la posición -->
    <div 
      class={`absolute w-3 h-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 transform rotate-45 ${
        position === 'top' ? 'top-[-6px] left-1/2 -translate-x-1/2 border-t border-l' : 
        position === 'right' ? 'right-[-6px] top-1/2 -translate-y-1/2 border-r border-t' : 
        position === 'bottom' ? 'bottom-[-6px] left-1/2 -translate-x-1/2 border-b border-r' : 
        'left-[-6px] top-1/2 -translate-y-1/2 border-l border-b'
      }`}
    ></div>
  </div>
</div>

<style>
  /* Verificar posición en pantallas pequeñas */
  @media (max-width: 768px) {
    .skill-tooltip {
      /* Siempre colocar arriba en móvil */
      left: 50% !important;
      bottom: 100% !important;
      top: auto !important;
      transform: translateX(-50%) !important;
      margin: 0 0 0.5rem 0 !important;
    }
    
    .skill-tooltip .absolute.w-3.h-3 {
      top: auto !important;
      bottom: -6px !important;
      left: 50% !important;
      transform: translateX(-50%) rotate(45deg) !important;
      border-width: 0 1px 1px 0 !important;
    }
  }
  
  /* Estilos específicos para RTL (para árabe y otros idiomas RTL) */
  [dir="rtl"] .skill-tooltip {
    text-align: right;
  }
  
  [dir="rtl"] .skill-tooltip .flex {
    flex-direction: row-reverse;
  }
  
  [dir="rtl"] .skill-tooltip .mr-2.5 {
    margin-right: 0;
    margin-left: 0.625rem;
  }
  
  [dir="rtl"] .skill-tooltip .space-x-1 > * + * {
    margin-left: 0;
    margin-right: 0.25rem;
  }
  
  [dir="rtl"] .skill-tooltip-link {
    text-align: left;
  }
  
  /* Estilos personalizados para el gradiente */
  .skill-gradient-bar {
    /* Gradiente por defecto */
    background: linear-gradient(90deg, #3B82F6, #4F46E5);
  }
  
  /* Animar opciones al cambiar opción */
  .skill-tooltip {
    transition: opacity 0.3s, visibility 0.3s, transform 0.3s;
  }
  
  /* Estilos para el borde personalizado basado en el color del pill */
  .skill-custom-tooltip .skill-tooltip-link {
    color: var(--tag-color, #3B82F6);
  }
  
  .skill-custom-tooltip .skill-custom-border {
    border-color: var(--tag-color, transparent);
  }
  
  .skill-custom-tooltip .skill-gradient-bar {
    background: linear-gradient(90deg, var(--tag-color, #3B82F6), color-mix(in srgb, var(--tag-color, #3B82F6), #ffffff 20%));
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Configurar colores personalizados de tooltips basados en el pill
    document.querySelectorAll('.skill-tooltip-container').forEach(container => {
      const pill = container.querySelector('.skill-pill');
      const tooltip = container.querySelector('.skill-tooltip');
      
      if (pill && tooltip) {
        // Extraer color del borde del pill para usar en tooltip
        const computedStyle = getComputedStyle(pill);
        const borderColor = computedStyle.borderColor;
        
        // Aplicar el color del borde como variable CSS en el tooltip
        tooltip.style.setProperty('--tag-color', borderColor);
      }
    });
  });
</script>
