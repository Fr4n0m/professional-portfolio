---
export interface Props {
  images: string[];
}

const { images } = Astro.props;
const imagesLength = images.length;
---

<div id="indicators-carousel" class="relative w-full" data-carousel="static">
  <!-- Carousel wrapper -->
  <div class="relative h-56 overflow-hidden rounded-lg md:h-96">
    {
      images.map((image, index) => (
        <div
          class={`${index === 0 ? "block" : "hidden"} duration-700 ease-in-out`}
          data-carousel-item={index === 0 ? "active" : ""}
        >
          <img
            src={image}
            class="absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2"
            alt={`Slide ${index + 1}`}
          />
        </div>
      ))
    }
  </div>

  <!-- Slider indicators -->
  <div
    class="absolute z-30 flex -translate-x-1/2 space-x-3 rtl:space-x-reverse bottom-5 left-1/2"
  >
    {
      images.map((_, index) => (
        <button
          type="button"
          class={`w-3 h-3 rounded-full ${index === 0 ? "bg-white" : "bg-gray-300"}`}
          aria-current={index === 0 ? "true" : "false"}
          aria-label={`Slide ${index + 1}`}
          data-carousel-slide-to={index}
        />
      ))
    }
  </div>

  <!-- Slider controls -->
  <button
    type="button"
    class="absolute top-0 start-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
    data-carousel-prev
  >
    <span
      class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none"
    >
      <svg
        class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 6 10"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M5 1 1 5l4 4"></path>
      </svg>
      <span class="sr-only">Previous</span>
    </span>
  </button>
  <button
    type="button"
    class="absolute top-0 end-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
    data-carousel-next
  >
    <span
      class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none"
    >
      <svg
        class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 6 10"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="m1 9 4-4-4-4"></path>
      </svg>
      <span class="sr-only">Next</span>
    </span>
  </button>
</div>

<!-- Script para manejar el carrusel -->
<script is:inline>
  imagesLength = { imagesLength };
  let currentIndex = 0;

  function showSlide(index) {
    const items = document.querySelectorAll("[data-carousel-item]");
    const indicators = document.querySelectorAll("[data-carousel-slide-to]");
    items.forEach((item, idx) => {
      if (idx === index) {
        item.classList.remove("hidden");
        item.classList.add("block");
        indicators[idx].classList.add("bg-white");
        indicators[idx].classList.remove("bg-gray-300");
      } else {
        item.classList.remove("block");
        item.classList.add("hidden");
        indicators[idx].classList.remove("bg-white");
        indicators[idx].classList.add("bg-gray-300");
      }
    });
  }

  function nextSlide() {
    currentIndex = (currentIndex + 1) % imagesLength;
    showSlide(currentIndex);
  }

  function prevSlide() {
    currentIndex = (currentIndex - 1 + imagesLength) % imagesLength;
    showSlide(currentIndex);
  }

  document
    .querySelector("[data-carousel-prev]")
    .addEventListener("click", prevSlide);
  document
    .querySelector("[data-carousel-next]")
    .addEventListener("click", nextSlide);
  document
    .querySelectorAll("[data-carousel-slide-to]")
    .forEach((btn, index) => {
      btn.addEventListener("click", () => showSlide(index));
    });
</script>
