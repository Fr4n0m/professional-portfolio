---
import ThemeToggle from './ThemeToggle.astro';

const navItems = [
	{
		title: 'Inicio',
		label: 'inicio',
		url: '/#',
	},
	{
		title: 'Experiencia',
		label: 'experiencia',
		url: '/#experiencia',
	},
	{
		title: 'Proyectos',
		label: 'proyectos',
		url: '/#proyectos',
	},
	/*  {
    title: "Sobre m√≠",
    label: "sobre-mi",
    url: "/#sobre-mi",
  }, */
	{
		title: 'Contacto',
		label: 'contacto',
		url: 'mailto:Fran11799@outlook.com',
	},
	{
		title: 'CV',
		label: 'cv',
		url: 'https://cv-web-smoky.vercel.app/',
	},
];
---

<header
	class='fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-2'
>
	<nav
		class='flex px-3 text-sm font-medium rounded-full flex-wrap m-3 ml-5 mr-5 p-1 xs:p-0 xs:px-1 lg:p-0 lg:px-2 md:p-0 md:px-2 xl:p-0 xl:px-2 text-gray-200 items-center justify-center'
	>
		<a href='/#' class='flex justify-center items-center mr-1'>
			<img
				src='/assets/images/Fr4n0m Photo.webp'
				alt='Fr4n0m photo'
				class='rounded-full w-5 h-5'
			/>
		</a>

		{
			navItems.map(link => (
				<a
					class='block px-2 py-2 transition text-nowrap hover:text-yellow-300'
					aria-label={link.label}
					href={link.url}
					target={link.title === 'CV' ? '_blank' : '_self'}
				>
					{link.title}
				</a>
			))
		}

		<!--  <ThemeToggle /> -->
	</nav>
</header>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const sections = document.querySelectorAll('section[data-section]');
		const navItems = document.querySelectorAll('header nav a');

		if (sections.length === 0) {
			console.error(
				'No se encontraron secciones con data-section en el DOM',
			);
			return;
		}

		const callback = (entries: any[]) => {
			entries.forEach(entry => {
				if (entry.isIntersecting) {
					navItems.forEach(item => {
						if (
							item.getAttribute('aria-label') === entry.target.id
						) {
							item.classList.add('text-yellow-300');
						} else {
							item.classList.remove('text-yellow-300');
						}
					});
				}
			});
		};

		const observer = new IntersectionObserver(callback, {
			root: null,
			rootMargin: '0px',
			threshold: 0.9,
		});

		sections.forEach(section => observer.observe(section));

		document.addEventListener('visibilitychange', () => {
			if (document.visibilityState === 'hidden') {
				observer.disconnect();
			} else {
				sections.forEach(section => observer.observe(section));
			}
		});
	});
</script>

<style>
	nav {
		animation: nav-shadown 1s linear both;
		animation-timeline: scroll();
		animation-range: 0 1000px;
	}

	@keyframes nav-shadown {
		to {
			@apply shadow-lg ring-1 backdrop-blur dark:bg-gray-800/90 bg-white/50 ring-white/10;
		}
	}
</style>
