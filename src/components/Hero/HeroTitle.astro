---
// HeroTitle.astro - Componente para el título y badge del hero
import Badge from '@components/ui/Badge.astro';
import TextPressureWrapper from '@components/TextPressureWrapper.astro';
import CompanyTooltip from '@components/ui/CompanyTooltip.astro';

interface Props {
  title: string;
  badgeText: string;
  darkMode?: boolean;
}

const { title, badgeText, darkMode = false } = Astro.props;

// Obtenemos la información de la empresa activa
import { getActiveSiteData } from '../../utils/experienceUtils';
const { companyUrl, companyLogo, companyName } = getActiveSiteData();
---

<div class='typing-container flex flex-col-reverse gap-y-4 md:gap-y-0 md:flex-row md:gap-x-4 lg:gap-x-6 pb-2 lg:pb-3 md:items-center'>
  <div class='typing mx-auto md:mx-0 md:min-w-[320px]'>
    <TextPressureWrapper 
      text={title} 
      darkMode={darkMode} 
      className="md:min-h-[100px] lg:min-h-[120px]"
    />
  </div>

  <div class='flex justify-center pt-0 md:pt-0 lg:pt-0 md:self-center badge-container relative'>
    <a
      href={companyUrl}
      target='_blank'
      rel='noopener'
      class='flex justify-center items-center mt-2 md:mt-0'
      aria-label={`${companyName} website`}
    >
      <Badge class="p-1 md:p-1.5 lg:p-1.5 relative">
        {companyLogo && (
          <img 
            src={companyLogo} 
            alt={`${companyName} logo`} 
            class="w-10 h-4 md:w-12 md:h-5 lg:w-16 lg:h-6 object-contain"
          />
        )}
      </Badge>
    </a>
    
    <!-- Tooltip de información de la empresa -->
    <CompanyTooltip
      companyName="Dimap"
      companyDescription="Empresa especializada en el diseño y desarrollo de aplicaciones y soluciones tecnológicas avanzadas. Expertos en ingeniería del software."
      companyLocation="Calle Pirandello, 16, Planta 3, Oficina 6, Málaga"
      companySpecialties={["Desarrollo de Software", "Aplicaciones Web", "Soluciones Empresariales", "TI"]}
      companyYears="Desde 2018"
      position="right"
      darkMode={darkMode}
    />
  </div>
</div>

<script>
  import { gsap } from 'gsap';
  
  document.addEventListener('DOMContentLoaded', () => {
    // Asegurar que las animaciones estén habilitadas por defecto
    if (localStorage.getItem('enable-animations') === null) {
      localStorage.setItem('enable-animations', 'true');
    }
    
    // Asegurar que la clase reduce-motion no esté aplicada si las animaciones están habilitadas
    if (localStorage.getItem('enable-animations') === 'true') {
      document.documentElement.classList.remove('reduce-motion');
    }
    
    // No necesitamos animación GSAP en el badge porque ahora usamos CSS para la animación
    // Solo configuramos la opacidad inicial
    const badgeElement = document.querySelector('a[aria-label] > span');
    if (badgeElement) {
      gsap.fromTo(badgeElement, 
        { opacity: 0, y: 5 },
        { opacity: 1, y: 0, duration: 0.4, ease: "power2.out", delay: 0.3 }
      );
    }
  });
</script>
