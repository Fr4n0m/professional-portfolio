---
// HeroTitle.astro - Componente para el título y badge del hero
import Badge from '@components/ui/Badge.astro';
import TextPressureWrapper from '@components/TextPressureWrapper.astro';

interface Props {
  title: string;
  badgeText: string;
  darkMode?: boolean;
}

const { title, badgeText, darkMode = false } = Astro.props;
---

<div class='typing-container flex flex-col-reverse gap-y-6 md:gap-y-0 md:flex-row md:gap-x-6 lg:gap-x-8 pb-2 lg:pb-3 md:items-start'>
  <div class='typing mx-auto md:mx-0 md:min-w-[320px]'>
    <TextPressureWrapper 
      text={title} 
      darkMode={darkMode} 
      className="md:min-h-[100px] lg:min-h-[120px]"
    />
  </div>

  <div class='flex justify-center md:pt-8 lg:pt-12 md:self-start text-nowrap'>
    <a
      href='https://www.linkedin.com/in/francisco-jos%C3%A9-r-5b2181bb/'
      target='_blank'
      rel='noopener'
      class='flex justify-center items-center'
    >
      <Badge class="pulsating">{badgeText}</Badge>
    </a>
  </div>
</div>

<script>
  import { gsap } from 'gsap';
  
  document.addEventListener('DOMContentLoaded', () => {
    // Animar la aparición del badge
    const badgeElement = document.querySelector('.pulsating');
    if (badgeElement) {
      gsap.set(badgeElement, {
        opacity: 0,
        y: 5
      });
      
      gsap.to(badgeElement, {
        opacity: 1,
        y: 0,
        duration: 0.3,
        ease: "power2.out",
        delay: 0.3,
        onComplete: () => {
          gsap.to(badgeElement, {
            scale: 1.05,
            duration: 1.2,
            repeat: -1,
            yoyo: true,
            ease: "sine.inOut"
          });
        }
      });
    }
  });
</script>
