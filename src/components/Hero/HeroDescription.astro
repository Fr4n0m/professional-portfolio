---
// HeroDescription.astro - Componente para la descripci√≥n del hero
import { commonClasses } from '@utils/cssClasses';
import DecryptedText from '@components/ui/DecryptedText';
import LocationText from '@components/ui/Map/LocationText.astro';
import { getActiveSiteData } from '../../utils/experienceUtils';
import { getCurrentLanguage } from '@i18n/config';

interface Props {
  description1: string;
  description2: string;
  description3: string;
  location: string;
}

const { description1, description2, description3, location } = Astro.props;

// Obtenemos la informaci√≥n de la ubicaci√≥n activa actual
const activeCompany = getActiveSiteData();
const activeLocation = activeCompany.location || location;

// Obtenemos el idioma actual
const lang = getCurrentLanguage(Astro.url) || 'es';

// Mantenemos el texto visible simplificado como "M√°laga, Espa√±a"
const visibleLocationText = "üìç M√°laga, Espa√±a";
const visibleLocationTextEN = "üìç Malaga, Spain";

// Determinamos qu√© texto mostrar seg√∫n la URL
const currentUrl = Astro.url.pathname;
const isEnglish = currentUrl.includes('/en');
const displayLocationText = isEnglish ? visibleLocationTextEN : visibleLocationText;
---

<!-- Contenedor con altura fija para evitar movimiento durante animaci√≥n -->
<div class="description-container min-h-[110px] md:min-h-[100px] lg:min-h-[90px] w-full" lang={lang} data-lang={lang}>
  <h2 class='text-xl lg:text-2xl opacity-95 text-wrap max-w-[700px] hero-description-mobile-centered mt-1 md:mt-0'>
    <span class={commonClasses.textColors.secondary}>
      <DecryptedText 
        text={description1 + " "}
        animateOn="view"
        revealDirection="center"
        sequential={true}
        speed={50}
        maxIterations={15}
        parentClassName="inline"
        className=""
        encryptedClassName=""
        client:load
      />
      <span class={commonClasses.textColors.tertiary}>
        <DecryptedText 
          text={description2 + " "}
          animateOn="view"
          revealDirection="center"
          sequential={true}
          speed={50}
          maxIterations={15}
          parentClassName="inline"
          className=""
          encryptedClassName=""
          client:load
        />
      </span>
    </span>
    <span class={commonClasses.textColors.muted}>
      <DecryptedText 
        text={description3.replace("ü§ì", "‚ö°")}
        animateOn="view"
        revealDirection="center"
        sequential={true}
        speed={50}
        maxIterations={15}
        parentClassName="inline"
        className=""
        encryptedClassName=""
        client:load
      />
    </span>
  </h2>
</div>

<!-- Separaci√≥n clara de la ubicaci√≥n -->
<div class="mt-0 md:mt-0">
  <LocationText 
    text={displayLocationText}
    city="M√°laga"
    region="Andaluc√≠a"
    address={activeLocation}
    className={commonClasses.textColors.accent + ' text-lg lg:text-xl'}
  />
</div>

<style>
  /* Estilos m√≥viles */
  .hero-description-mobile-centered {
    margin-left: auto;
    margin-right: auto;
    text-align: center;
  }
  
  /* Responsive design */
  @media (min-width: 768px) {    
    .hero-description-mobile-centered {
      margin-left: 0;
      margin-right: 0;
      text-align: left;
    }
  }
  
  /* Contenedor de altura fija que evita el "salto" durante la animaci√≥n */
  .description-container {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    position: relative;
  }
</style>