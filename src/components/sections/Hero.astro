---
import Badge from '@components/ui/Badge.astro';
import LinkedInIcon from '@icons/LinkedIn.astro';
import SocialPill from '@components/ui/SocialPill.astro';
import GitHubIcon from '@icons/GitHub.astro';
import MailIcon from '@icons/Mail.astro';
import CopyButton from '@components/CopyButton.astro';
import TextPressureWrapper from '@components/TextPressureWrapper.astro';
import type { Translations } from '../../types/translations';
import { commonClasses } from '@utils/cssClasses';

interface Props {
  translations: Translations;
  lang?: string;
}

const { translations, lang } = Astro.props;

const hero = translations.mainPage.hero;
const socialPill = translations.mainPage.socialPill;
const copyButton = translations.mainPage.socialPill.copyButton;
const socialMedia = translations.socialMedia;
const personalInfo = translations.personalInfo;
---

<div class={commonClasses.flexCenter + ' md:justify-start'}>
  <div class="profile-frame">
    <img
      class={commonClasses.profileImage}
      src='/assets/images/foto-carnet.webp'
      alt='Fr4n0m photo'
    />
    <div class="profile-decoration top-left"></div>
    <div class="profile-decoration top-right"></div>
    <div class="profile-decoration bottom-left"></div>
    <div class="profile-decoration bottom-right"></div>
  </div>
</div>

<div class='typing-container flex flex-col-reverse gap-y-6 md:gap-y-0 md:flex-row md:gap-x-10 lg:gap-x-20 pb-8 lg:pb-12 items-center'>
  <div class='typing mx-auto md:mx-0 md:min-w-[320px]'>
    <TextPressureWrapper 
      text={hero.heroTitle} 
      darkMode={false} 
      className="md:min-h-[75px] lg:min-h-[90px]"
    />
  </div>

  <div class='flex justify-center items-center text-nowrap'>
    <a
      href='https://www.linkedin.com/in/francisco-jos%C3%A9-r-5b2181bb/'
      target='_blank'
      rel='noopener'
      class='flex justify-center items-center'
    >
      <Badge class="pulsating">{hero.heroBadge}</Badge>
    </a>
  </div>
</div>

<h2 class='text-xl lg:text-2xl opacity-95 text-wrap max-w-[700px] hero-description-mobile-centered'>
  <span class={commonClasses.textColors.secondary}>
    {hero.heroDescription1}
    <span class={commonClasses.textColors.tertiary}>
      {hero.heroDescription2}
    </span>
  </span>
  <span class={commonClasses.textColors.muted}>
    {hero.heroDescription3}
  </span>
  <span class={commonClasses.textColors.accent + ' text-lg lg:text-xl'}>
    <br />{personalInfo.location}
  </span>
</h2>

<nav class='flex align-center gap-4 mt-8 flex-wrap social-links-mobile-centered'>
  <SocialPill
    title={`${socialPill.socialPillTitle} ${socialMedia.linkedin}`}
    href='https://www.linkedin.com/in/francisco-jos%C3%A9-r-5b2181bb/'
  >
    <LinkedInIcon class={commonClasses.iconSize.small + ' md:' + commonClasses.iconSize.medium} />
    {socialMedia.linkedin}
  </SocialPill>

  <SocialPill
    title={`${socialPill.socialPillTitle} ${socialMedia.github}`}
    href='https://github.com/Fr4n0m'
  >
    <GitHubIcon class={commonClasses.iconSize.small + ' md:' + commonClasses.iconSize.medium} />
    {socialMedia.github}
  </SocialPill>

  <div class='flex gap-4'>
    <SocialPill
      title={`${socialPill.sendMailSocialPill} ${personalInfo.mail}`}
      href='mailto:Fran11799@outlook.com'
    >
      <MailIcon class={commonClasses.iconSize.small + ' md:' + commonClasses.iconSize.large} />
      {personalInfo.mail}
    </SocialPill>

    <CopyButton translations={copyButton} lang={lang}/>
  </div>
</nav>

<style>
  .profile-frame {
    position: relative;
    width: 8rem;
    height: 8rem;
    padding: 0.25rem;
    background: linear-gradient(135deg, rgba(31, 66, 159, 0.08) 0%, rgba(31, 66, 159, 0.15) 100%);
    border-radius: 1.5rem;
    box-shadow: 0 8px 24px rgba(31, 66, 159, 0.15);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    overflow: visible;
  }
  
  .profile-frame:hover {
    transform: translateY(-5px);
    box-shadow: 0 12px 28px rgba(31, 66, 159, 0.25);
  }
  
  /* Elementos decorativos en las esquinas */
  .profile-decoration {
    position: absolute;
    width: 0.5rem;
    height: 0.5rem;
    background-color: #1F429F;
    z-index: 1;
  }
  
  .profile-decoration.top-left {
    top: 0;
    left: 0;
    border-top-left-radius: 0.5rem;
    border-bottom-right-radius: 0.25rem;
  }
  
  .profile-decoration.top-right {
    top: 0;
    right: 0;
    border-top-right-radius: 0.5rem;
    border-bottom-left-radius: 0.25rem;
  }
  
  .profile-decoration.bottom-left {
    bottom: 0;
    left: 0;
    border-bottom-left-radius: 0.5rem;
    border-top-right-radius: 0.25rem;
  }
  
  .profile-decoration.bottom-right {
    bottom: 0;
    right: 0;
    border-bottom-right-radius: 0.5rem;
    border-top-left-radius: 0.25rem;
  }
  
  /* Versión oscura */
  :global(.dark) .profile-frame {
    background: linear-gradient(135deg, rgba(250, 204, 21, 0.08) 0%, rgba(250, 204, 21, 0.15) 100%);
    box-shadow: 0 8px 24px rgba(250, 204, 21, 0.15);
  }
  
  :global(.dark) .profile-frame:hover {
    box-shadow: 0 12px 28px rgba(250, 204, 21, 0.25);
  }
  
  :global(.dark) .profile-decoration {
    background-color: #facc15;
  }
  
  .hero-description-mobile-centered {
    margin-left: auto;
    margin-right: auto;
    text-align: center;
  }

  .social-links-mobile-centered {
    justify-content: center;
  }
  
  @media (min-width: 768px) {
    .profile-frame {
      width: 9rem;
      height: 9rem;
      padding: 0.35rem;
    }
    
    .profile-decoration {
      width: 0.6rem;
      height: 0.6rem;
    }
    
    .hero-description-mobile-centered {
      margin-left: 0;
      margin-right: 0;
      text-align: left;
    }
    
    .social-links-mobile-centered {
      justify-content: flex-start;
    }
  }
  
  @media (min-width: 1024px) {
    .profile-frame {
      width: 10rem;
      height: 10rem;
      padding: 0.4rem;
    }
    
    .profile-decoration {
      width: 0.7rem;
      height: 0.7rem;
    }
  }
</style>

<script>
  import { gsap } from 'gsap';
  
  document.addEventListener('DOMContentLoaded', () => {
    // Animar los elementos decorativos del marco de la foto
    const decorations = document.querySelectorAll('.profile-decoration');
    gsap.from(decorations, {
      scale: 0,
      duration: 0.5,
      stagger: 0.15,
      ease: "back.out(1.7)",
      delay: 0.2
    });
    
    // Animación de la foto de perfil
    const profileFrame = document.querySelector('.profile-frame');
    gsap.from(profileFrame, {
      y: 30,
      opacity: 0,
      duration: 0.8,
      ease: "power2.out"
    });
    
    // Animar la aparición del badge
    const badgeElement = document.querySelector('.pulsating');
    if (badgeElement) {
      // Ocultamos el badge inicialmente
      gsap.set(badgeElement, {
        opacity: 0,
        y: 15
      });
      
      // Mostramos el badge con un pequeño retraso
      gsap.to(badgeElement, {
        opacity: 1,
        y: 0,
        duration: 0.5,
        ease: "power2.out",
        delay: 1, // Esperamos a que se cargue el componente TextPressure
        onComplete: () => {
          // Animación sutil de pulso
          gsap.to(badgeElement, {
            scale: 1.05,
            duration: 1.2,
            repeat: -1,
            yoyo: true,
            ease: "sine.inOut"
          });
        }
      });
    }
  });
</script>
