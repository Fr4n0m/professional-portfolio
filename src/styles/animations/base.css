/* Base animation definitions
 * Define reusable keyframes and basic animations
 */

/* Keyframes */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    transform: translateX(-30px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(30px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes scaleIn {
  from {
    transform: scale(0.9);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes bounce {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Utility classes for animations */
.animate-fade-in {
  animation: fadeIn var(--transition-normal) ease forwards;
}

.animate-fade-in-up {
  animation: fadeInUp var(--transition-normal) ease forwards;
}

.animate-fade-in-down {
  animation: fadeInDown var(--transition-normal) ease forwards;
}

.animate-slide-in-left {
  animation: slideInLeft var(--transition-normal) ease forwards;
}

.animate-slide-in-right {
  animation: slideInRight var(--transition-normal) ease forwards;
}

.animate-scale-in {
  animation: scaleIn var(--transition-normal) ease forwards;
}

.animate-pulse {
  animation: pulse 2s ease-in-out infinite;
}

.animate-bounce {
  animation: bounce 2s ease-in-out infinite;
}

.animate-spin {
  animation: spin 1s linear infinite;
}

/* Animation delays */
.delay-100 {
  animation-delay: 100ms;
}

.delay-200 {
  animation-delay: 200ms;
}

.delay-300 {
  animation-delay: 300ms;
}

.delay-400 {
  animation-delay: 400ms;
}

.delay-500 {
  animation-delay: 500ms;
}

/* Animation durations */
.duration-fast {
  animation-duration: var(--transition-fast);
}

.duration-normal {
  animation-duration: var(--transition-normal);
}

.duration-slow {
  animation-duration: var(--transition-slow);
}

/* Transitions */
.transition {
  transition-property: all;
  transition-timing-function: ease;
  transition-duration: var(--transition-normal);
}

.transition-transform {
  transition-property: transform;
  transition-timing-function: ease;
  transition-duration: var(--transition-normal);
}

.transition-opacity {
  transition-property: opacity;
  transition-timing-function: ease;
  transition-duration: var(--transition-normal);
}

.transition-colors {
  transition-property: color, background-color, border-color;
  transition-timing-function: ease;
  transition-duration: var(--transition-normal);
}

/* Animation preferences */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
